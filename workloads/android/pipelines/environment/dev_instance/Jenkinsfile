// Copyright (c) 2024-2025 Accenture, All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//         http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Description:
// Create a development instance that developers can connect to for a finite
// time, allowing them to develop builds and investigate issues.
def kubernetesPodTemplate = """
        apiVersion: v1
        kind: Pod
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          labels:
            aaos_pod: "true"
        spec:
          tolerations:
          - key: workloadType
            operator: Equal
            value: android
            effect: "NoSchedule"
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: aaos_pod
                    operator: Exists
                topologyKey: kubernetes.io/hostname
          hostname: jenkins-aaos-build-pod
          serviceAccountName: ${JENKINS_SERVICE_ACCOUNT}
          containers:
          - name: builder
            image: ${CLOUD_REGION}-docker.pkg.dev/${CLOUD_PROJECT}/${ANDROID_BUILD_DOCKER_ARTIFACT_PATH_NAME}:latest
            imagePullPolicy: IfNotPresent
            command:
            - sleep
            args:
            - 9h
            resources:
              limits:
                cpu: 96000m
                memory: 160000Mi
              requests:
                cpu: 96000m
                memory: 160000Mi
            volumeMounts:
              - mountPath: /aaos-cache
                name: aaos-cache
          volumes:
            - name: aaos-cache
              ephemeral:
                volumeClaimTemplate:
                  spec:
                    storageClassName: ${JENKINS_CACHE_STORAGE_CLASS_NAME}
                    resources:
                      requests:
                        storage: 2000Gi
                    accessModes:
                      - ReadWriteOnce
          nodeSelector:
            workloadLabel: android
""".stripIndent()

pipeline {

  parameters {
    choice(name: 'INSTANCE_MAX_UPTIME',
           choices: ['0', '1', '2', '4', '8'],
           description: '''<p>Time in hours to keep instance alive.</p>''')
  }

  agent none

  stages {
    stage ('Start VM Instance') {
      agent { kubernetes { yaml kubernetesPodTemplate } }
      stages {
        stage ('Retain instance') {
          when { expression { env.INSTANCE_MAX_UPTIME } }
          steps {
            container(name: 'builder') {
              script {
                sleep(time: "${INSTANCE_MAX_UPTIME}", unit: 'HOURS')
              }
            }
          }
        }
      }
    }
  }
}
